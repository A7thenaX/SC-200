# Chapter 10: Threat hunting

 - [ ] Explain threat hunting concepts in Microsoft Sentinel
 - [ ] Threat hunting with Microsoft Sentinel
 - [ ] Use Search jobs in Microsoft Sentinel
 - [ ] Hunt for threats using notebooks in Microsoft Sentinel

 ## Explain threat hunting concepts in Microsoft Sentinel

 `Threat hunting`
 - proactively hunting through your environment for a threat or a set of activities that you **haven't previously detected**
 - searching for threats with newly obtained indicators

 `Threat modeling`
 - To identify and assess potential threats before they occur, during the design or planning phase of a system or application.
 - Understanding how an attacker might exploit a system.

 `Important to know before executing`
 - we hunt based on a Hypothesis
 - hunt for evidence-based threats from a current Incident or Alert as part of an Incident Analysis process
 - it's vital to explore data based on evidence found in a current incident
 - involves forming hypotheses and searching for patterns or behaviors that indicate malicious activity
 - using KQL queries to find threats

`Proactive hunts`
 - Why do proactive hunting? As you hunt for "not previously detected" threats, the concern is that if you wait for the threat to be detected, the compromise impact could be more significant. 
 - The Hypothesis might start with "Operational Threat Intelligence," and then list the attackers' tactics and techniques.
 - A Hypothesis can search for a specific technique, not an indicator like an IP address.
 - If malicious activity is identified, we might have discovered the attacker earlier in the attack process before they have an opportunity to exfiltrate data.

 `Threat hunting process (DOCUMENT)`
 1. Develop Hypothesis
    - Our Hypothesis helps us plan out what we are going to hunt for, which requires us to understand where we're going to hunt and how we'll do it
    - This could be an alert, anomaly, threat intelligence, or even a hunch based on experience
    - example: An attacker may be using legitimate credentials to move laterally 
 2. Data review
    - Identify and review the data sources you’ll need to validate your hypothesis.
    - This includes logs from endpoints, network traffic, identity systems, and threat intelligence feeds.
 3. Plan hunt
    - Define the scope, tools, and queries for your hunt.
    - Decide which systems, timeframes, and techniques you’ll investigate.
4. Execute hunt
    - Run your queries and analyze the data to confirm or refute your hypothesis.
    - Look for anomalies, patterns, and indicators of compromise.
5. Respond
   - If you find evidence of malicious activity, escalate to incident response.
   - Take actions like isolating systems, blocking IPs, or disabling compromised accounts.
6. Monitor
   - Continue monitoring for similar patterns or behaviors 
   - Update detection rules and dashboards to catch future occurrences.
7. Improve
   - Feed lessons learned back into your security program.
   - Enhance detection capabilities, refine hunting queries, and improve processes.

Document (Central Step)
- Document every stage: hypothesis, queries, findings, and outcomes.
- This ensures repeatability and knowledge sharing across the team.

![Threat hunting process](/Images/process.png)










 